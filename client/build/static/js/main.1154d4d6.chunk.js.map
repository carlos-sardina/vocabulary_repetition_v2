{"version":3,"sources":["redux/actions/modals.js","redux/reducers/modals.js","redux/actions/words.js","redux/reducers/words.js","redux/actions/language.js","redux/reducers/language.js","redux/actions/player.js","redux/reducers/player.js","redux/store.js","components/header/header.jsx","util/setItemTimesColor.js","services/words.js","util/updateWordsListFromServer.js","util/setInitialData.js","data/availableLanguages.js","util/tts.js","util/googleCodes.js","util/player.js","util/numbers.js","util/player_bar.js","util/DOMLoader.js","components/playingBar/playingBar.jsx","components/playingTooltip/playingTooltip.jsx","components/wordItem/wordItem.jsx","components/wordList/wordList.jsx","components/menuItem/menuItem.jsx","components/modalMenu/menu.jsx","components/tag/tag.jsx","components/button/button.jsx","components/modalCardDetails/cardDetails.jsx","components/modalAddEditCard/addEdit.jsx","components/modalRepeatTimes/repeatTimesModal.jsx","services/config.js","components/appModals/modals.jsx","containers/dashboard.jsx","components/languageItem/language.jsx","containers/welcome/welcomeScreen.jsx","containers/containers.jsx","App.js","index.js"],"names":["type","setModalStatus","modalName","newStatus","payload","initialState","addEditModal","menuModal","repeatTimesModal","modalsReducer","state","modalTypes","currentKey","setWordsList","words","setSelectedWord","word","setRepeatTimes","times","addReproducedTime","id","selectedWord","studiedAverage","repeat_times","wordsReducer","wordTypes","map","_id","times_played","setLanguage","language","languageReducer","languageTypes","setPlayingId","setTotalWords","total","setEstimatedTime","time","addIteration","playing_id","estimatedTime","totalWords","current","playerReducer","playerTypes","reducer","combineReducers","devtoools","window","__REDUX_DEVTOOLS_EXTENSION__","Store","createStore","mapDispatchToProps","connect","props","src","img","alt","code","name","className","onClick","setTimesColor","addTimeCounted","Promise","resolve","reject","axios","patch","process","then","res","catch","err","updateActiveWordListFromAPI","get","data","getWords","dispatch","setInitialData","average","config","languages","google_id_pc","google_id_mobile","Speech","text","synth","speechSynthesis","voices","getVoices","textToRead","SpeechSynthesisUtterance","length","voice","filter","voiceURI","speak","onend","GoogleLanguage","lang","isMobile","Player","canPlay","play","tempWords","a","Array","isArray","this","push","fill","PlayerBar","showPlayer","i","DOMLoader","hidde","resetPlayer","next","t0","performance","now","meaning","t1","NumbersUtilities","millisToMinutesAndSeconds","Number","stop","hiddePlayer","millis","minutes","Math","floor","seconds","toFixed","document","getElementById","style","display","notification","animationName","setTimeout","element","classList","add","show","remove","PlayingTooltip","averageDiff","currentWordId","sign","menuItem","icon","onClickEvent","customClass","isModalOpen","closeModal","isOpen","requestClose","position","alignItems","justifyContent","classes","contentClassName","bg_color","modalBtn","tagClass","isFirstTime","deleteWordHandler","confirm","delete","deleteWord","toast","error","moveToLearnedHandler","put","setWordAsLearned","creationDate","moment","created","today","utc","format","daysDifference","diff","toString","replace","readWord","closeAndResetState","setState","handleKeyDown","e","key","addEditWord","handleChange","target","value","matchWord","done","wordsMatched","warn","editWordHandler","addWordHandler","statusCode","post","status","createWord","message","focus","success","location","newProps","autoComplete","placeholder","onChange","disabled","onKeyDown","w","Component","repeatTimes","updateTimes","parseInt","updateTimesToRepeat","timesToRepeat","String","modals","Home","setLanguageHandler","Containers","App","store","autoClose","pauseOnHover","pauseOnFocusLoss","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.1154d4d6.chunk.js","sourcesContent":["export const type = {\r\n  set: \"SET_MODAL_STATUS\"\r\n};\r\n\r\nexport const setModalStatus = (modalName, newStatus) => ({\r\n  type: type.set,\r\n  payload: {\r\n    modalName,\r\n    newStatus\r\n  }\r\n});","import { type as modalTypes } from \"../actions/modals\";\r\n\r\nconst initialState = {\r\n  addEditModal: false,\r\n  menuModal: false,\r\n  repeatTimesModal: false\r\n};\r\n\r\nconst modalsReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case modalTypes.set:\r\n      const currentKey = payload.modalName;\r\n      return {\r\n        ...state,\r\n        [currentKey]: payload.newStatus\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default modalsReducer;","export const type = {\r\n  set_list: \"SET_WORDS_LIST\",\r\n  set_selected_word: \"SET_SELECTED_WORD\",\r\n  set_average_times: \"SET_AVERAGE_TIMES\",\r\n  set_repeat_times: \"SET_REPEAT_TIMES\",\r\n  add_reproduced_time: \"ADD_REPRODUCED_TIME\"\r\n};\r\n\r\nexport const setWordsList = (words) => ({\r\n  type: type.set_list,\r\n  payload: words\r\n});\r\n\r\nexport const setSelectedWord = (word) => ({\r\n  type: type.set_selected_word,\r\n  payload: word\r\n});\r\n\r\nexport const setAverageTimes = (times) => ({\r\n  type: type.set_average_times,\r\n  payload: times\r\n});\r\n\r\nexport const setRepeatTimes = (times) => ({\r\n  type: type.set_repeat_times,\r\n  payload: times\r\n});\r\n\r\nexport const addReproducedTime = (id) => ({\r\n  type: type.add_reproduced_time,\r\n  payload: id\r\n});\r\n\r\n","import { type as wordTypes } from \"../actions/words\";\r\n\r\nconst initialState = {\r\n  words: [],\r\n  selectedWord: null,\r\n  studiedAverage: 0,\r\n  repeat_times: null\r\n};\r\n\r\nconst wordsReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case wordTypes.set_list:\r\n      return {\r\n        ...state,\r\n        words: payload,\r\n      }\r\n    case wordTypes.set_selected_word:\r\n      return {\r\n        ...state,\r\n        selectedWord: payload\r\n      }\r\n    case wordTypes.set_average_times:\r\n      return {\r\n        ...state,\r\n        studiedAverage: payload\r\n      }\r\n    case wordTypes.set_repeat_times:\r\n      return {\r\n        ...state,\r\n        repeat_times: payload\r\n      }\r\n    case wordTypes.add_reproduced_time:\r\n      const words = state.words.map(word => {\r\n        if(word._id === payload) {\r\n          word.times_played = word.times_played + 1; \r\n        }\r\n\r\n        return word;\r\n      })\r\n      return {\r\n        ...state,\r\n        words\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default wordsReducer;","export const type = {\r\n  set_language: \"SET_LANGUAGE\",\r\n};\r\n\r\nexport const setLanguage = (language) => ({\r\n  type: type.set_language,\r\n  payload: language\r\n});","import { type as languageTypes } from \"../actions/language\";\r\n\r\nconst initialState = {\r\n  language: null\r\n};\r\n\r\nconst languageReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case languageTypes.set_language:\r\n    return {\r\n      language: payload\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default languageReducer;","export const type = {\r\n  set_playing_id: 'SET_PLAYING_ID',\r\n  set_total_words: 'SET_TOTAL_WORDS',\r\n  set_estimated_time: 'SET_ESTIMATED_TIME',\r\n  add_iteration: 'ADD_ITERATION',\r\n  reset_data: 'RESET_DATA'\r\n}\r\n\r\nexport const setPlayingId = (id) => ({\r\n  type: type.set_playing_id,\r\n  payload: id\r\n})\r\n\r\nexport const setTotalWords = (total) => ({\r\n  type: type.set_total_words,\r\n  payload: total\r\n})\r\n\r\nexport const setEstimatedTime = (time) => ({\r\n  type: type.set_estimated_time,\r\n  payload: time\r\n})\r\n\r\nexport const addIteration = () => ({\r\n  type: type.add_iteration\r\n})\r\n\r\nexport const resetPlayerData = () => ({\r\n  type: type.reset_data\r\n});","import { type as playerTypes } from '../actions/player'\r\n\r\nconst initialState = {\r\n  playing_id: null,\r\n  estimatedTime: null,\r\n  totalWords: null,\r\n  current: 0\r\n}\r\n\r\nconst playerReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n\r\n  case playerTypes.set_playing_id:\r\n    return {\r\n      ...state,\r\n      playing_id: payload\r\n    }\r\n  case playerTypes.add_iteration:\r\n    return {\r\n      ...state,\r\n      current: state.current + 1\r\n    }\r\n  case playerTypes.set_estimated_time:\r\n    return {\r\n      ...state,\r\n      estimatedTime: payload\r\n    }\r\n  case playerTypes.set_total_words:\r\n    return {\r\n      ...state,\r\n      totalWords: payload\r\n    }\r\n  case playerTypes.reset_data:\r\n    return initialState\r\n\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport default playerReducer;","import { createStore, combineReducers } from 'redux'\r\n\r\nimport modalsReducer from \"./reducers/modals\";\r\nimport wordsReducer from \"./reducers/words\";\r\nimport languageReducer from \"./reducers/language\";\r\nimport playerReducer from \"./reducers/player\";\r\n\r\nconst reducer = combineReducers({\r\n  modalsReducer,\r\n  wordsReducer,\r\n  languageReducer,\r\n  playerReducer\r\n});\r\n\r\nconst devtoools = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n\r\nexport const Store = createStore(reducer, devtoools);\r\n","import React from 'react';\r\nimport './styles.css';\r\nimport { setModalStatus } from '../../redux/actions';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction header(props) {\r\n\r\n  function openDetailsModal() {\r\n    props.setModalStatus('menuModal', true);\r\n  }\r\n  \r\n  const { language } = props;\r\n\r\n  return (\r\n    <header>\r\n      <span> <img src={language.img} alt={language.code}/> { language.name }</span>\r\n      <i className=\"material-icons\" onClick={openDetailsModal}>menu</i>\r\n    </header>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    language: state.languageReducer.language\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setModalStatus\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(header);","export function setTimesColor(times) {\r\n  if (times > 0 && times < 100) {\r\n    return \"bg_blue\"\r\n  } else if (times >= 100 && times < 200) {\r\n    return \"bg_yellow\"\r\n  } else if (times >= 200 && times < 400) {\r\n    return \"bg_red\"\r\n  } else if (times >= 400 && times < 500) {\r\n    return \"bg_red_str\"\r\n  } else if (times >= 500 && times < 550) {\r\n    return \"bg_purple\"\r\n  } else if (times >= 550 && times < 600) {\r\n    return \"bg_purple_str\"\r\n  } else if (times >= 600) {\r\n    return \"bg_black\"\r\n  }\r\n\r\n  return \"bg_green\";\r\n}","import axios from 'axios';\r\n\r\nexport const getWords = (language) => {\r\n  return new Promise((resolve, reject) => {\r\n    axios.get(process.env.REACT_APP_SERVER_IP + '/words/list/active/' + language)\r\n      .then(res => resolve(res.data))\r\n      .catch(err => reject(err));\r\n  })\r\n};\r\n\r\nexport const deleteWord = (id) => {\r\n  return new Promise((resolve, reject) => {\r\n    axios.delete(process.env.REACT_APP_SERVER_IP + '/words/delete/' + id)\r\n      .then(res => resolve(res))\r\n      .catch(err => reject(err));\r\n  })\r\n};\r\n\r\nexport const setWordAsLearned = (id) => {\r\n  return new Promise((resolve, reject) => {\r\n    axios.put(process.env.REACT_APP_SERVER_IP + '/words/setLearned/' + id)\r\n      .then(res => resolve(res))\r\n      .catch(err => reject(err));\r\n  })\r\n};\r\n\r\nexport const createWord = (word) => {\r\n  return new Promise((resolve, reject) => {\r\n    axios.post(process.env.REACT_APP_SERVER_IP + '/words/create', word)\r\n      .then(res => resolve(res.status))\r\n      .catch(err => reject(err));\r\n  })\r\n};\r\n\r\nexport const editWord = (word) => {\r\n  return new Promise((resolve, reject) => {\r\n    axios.put(process.env.REACT_APP_SERVER_IP + '/words/update/' + word._id, word)\r\n      .then(res => resolve(res))\r\n      .catch(err => reject(err));\r\n  })\r\n};\r\n\r\nexport const matchWord = (value) => {\r\n  return new Promise((resolve, reject) => {\r\n    axios.get(process.env.REACT_APP_SERVER_IP + '/words/match/' + value)\r\n      .then(res => resolve(res))\r\n      .catch(err => reject(err));\r\n  })\r\n};\r\n\r\nexport const addTimeCounted = (id) => {\r\n  return new Promise((resolve, reject) => {\r\n    axios.patch(process.env.REACT_APP_SERVER_IP + '/words/update/' + id + '/counter')\r\n      .then(res => resolve(res))\r\n      .catch(err => reject(err));\r\n  })\r\n};","import { getWords } from '../services/words';\r\nimport { Store } from '../redux/store';\r\nimport { setWordsList } from '../redux/actions/words';\r\n\r\nexport const updateActiveWordListFromAPI = (language) => {\r\n  return new Promise((resolve, reject) => {\r\n    getWords(language)\r\n      .then(data => Store.dispatch(setWordsList(data)))\r\n      .then(() => resolve())\r\n      .catch(err => reject(err))\r\n  })\r\n}","import { setAverageTimes, setRepeatTimes } from '../redux/actions';\r\nimport { Store } from '../redux/store';\r\n\r\nexport const setInitialData = (data) => {\r\n  Store.dispatch(setAverageTimes(data.average))\r\n  Store.dispatch(setRepeatTimes(data.config))\r\n}","export const languages = [\r\n  {\r\n    name: 'English',\r\n    code: 'en',\r\n    img: 'https://upload.wikimedia.org/wikipedia/commons/a/a4/Flag_of_the_United_States.svg',\r\n    google_id_pc: 'Google US English',\r\n    google_id_mobile: 'inglés Estados Unidos',\r\n  },\r\n  {\r\n    name: '日本語',\r\n    code: 'jp',\r\n    img: 'https://upload.wikimedia.org/wikipedia/commons/9/9e/Flag_of_Japan.svg',\r\n    google_id_pc: 'Google 日本語',\r\n    google_id_mobile: 'japonés Japón',\r\n  },\r\n  {\r\n    name: 'All',\r\n    code: 'all',\r\n    img: 'https://upload.wikimedia.org/wikipedia/commons/2/2f/Flag_of_the_United_Nations.svg'\r\n  }\r\n]","import { languages } from \"../data/availableLanguages\";\r\n\r\nexport const Speech = {\r\n  /**\r\n   * This methods read the text sent as a parameter\r\n   * @param {String} text Text to speech\r\n   * @param {String} language Type voice\r\n   */\r\n  readText: (text, language) => {\r\n    return new Promise((resolve, reject) => {\r\n      const synth = window.speechSynthesis;\r\n\r\n      const voices = synth.getVoices();\r\n      const textToRead = new SpeechSynthesisUtterance(text);\r\n\r\n      if (voices.length) {\r\n        textToRead.voice = voices.filter(voice => voice.voiceURI === language)[0];\r\n        synth.speak(textToRead);\r\n      }\r\n      textToRead.onend = () => resolve();\r\n    })\r\n  },\r\n  getVoices: () => window.speechSynthesis.getVoices(),\r\n  open: () => window.speechSynthesis\r\n};\r\n","import { languages } from '../data/availableLanguages';\r\nimport { isMobile } from 'react-device-detect';\r\n\r\nexport const GoogleLanguage = {\r\n  getFromCode: (code) => languages.filter(lang => code === lang.code)[0][(isMobile ? 'google_id_mobile' : 'google_id_pc')],\r\n  spanish: () => isMobile ? 'español Estados Unidos' : 'Google español de Estados Unidos'\r\n}","import { Store } from '../redux/store';\r\nimport { Speech, GoogleLanguage, NumbersUtilities, PlayerBar, DOMLoader } from './index';\r\nimport { setTotalWords, setPlayingId, addIteration, setEstimatedTime, resetPlayerData, addReproducedTime } from '../redux/actions';\r\nimport { addTimeCounted } from '../services/words';\r\n\r\nexport const Player = {\r\n  canPlay: true,\r\n  /**\r\n   * Play words with the repeat times config\r\n   * \r\n   * @param {Array} words * Words to play\r\n   * @param {Object} times * Times to play each word\r\n   */\r\n  play: async function(tempWords, times = 1) {\r\n    if(!Array.isArray(tempWords)) {\r\n      return false;\r\n    }\r\n\r\n    this.canPlay = true;\r\n    let words = [];\r\n    tempWords.map(word => words.push(...new Array(times).fill(word)))\r\n    Store.dispatch(setTotalWords(words.length));\r\n    PlayerBar.showPlayer();\r\n\r\n    for(let i in words) {\r\n      if(!this.canPlay) {\r\n        DOMLoader.hidde();\r\n        this.resetPlayer();\r\n        break;\r\n      }\r\n      Store.dispatch(setPlayingId(words[i]._id));\r\n      Store.dispatch(addIteration());\r\n      Store.dispatch(addReproducedTime(words[i]._id));\r\n      await addTimeCounted(words[i]._id);\r\n      await new Promise(next => {\r\n        const t0 = performance.now();\r\n        Speech.readText(words[i].word, GoogleLanguage.getFromCode(words[i].language))\r\n          .then(() => Speech.readText(words[i].meaning, GoogleLanguage.spanish()))\r\n          .then(() => {\r\n            const t1 = performance.now();\r\n            const estimatedTime = (words.length - i) * (t1 - t0);\r\n            Store.dispatch(setEstimatedTime(NumbersUtilities.millisToMinutesAndSeconds(estimatedTime)))\r\n            return next();\r\n          })\r\n      })\r\n\r\n      if(Number(i) + 1 === words.length) {\r\n        this.resetPlayer();\r\n      }\r\n    }\r\n  },\r\n  stop: function() {\r\n    this.canPlay = false;\r\n  },\r\n  resetPlayer: function() {\r\n    PlayerBar.hiddePlayer();\r\n    Store.dispatch(resetPlayerData());\r\n  }\r\n}","export const NumbersUtilities = {\r\n  millisToMinutesAndSeconds: (millis) => {\r\n    var minutes = Math.floor(millis / 60000);\r\n    var seconds = ((millis % 60000) / 1000).toFixed(0);\r\n    return minutes + \":\" + (seconds < 10 ? '0' : '') + seconds;\r\n  }\r\n}","export const PlayerBar = {\r\n  /**\r\n   * Show player bar\r\n   */\r\n  showPlayer: () => {\r\n    const notification = document.getElementById('player');\r\n    notification.style.display = \"block\";\r\n  },\r\n  /**\r\n   * Hidde player bar\r\n   */\r\n  hiddePlayer: () => {\r\n    const notification = document.getElementById('player');\r\n    notification.style.animationName = 'fadeOutDown';\r\n      setTimeout(() => {\r\n        notification.style.display = 'none';\r\n        notification.style.animationName = 'fadeInUp';\r\n      }, 180);\r\n  }\r\n}","export const DOMLoader = {\r\n  element: document.getElementById('ipl-progress-indicator'),\r\n  hidde: function() {\r\n    if (this.element) {\r\n      setTimeout(() => {\r\n        this.element.classList.add('available');\r\n      }, 100)\r\n    }\r\n  },\r\n  show: function() {\r\n    if (this.element) {\r\n      this.element.classList.remove('available')\r\n    }\r\n  }\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './styles.css';\r\nimport { Player, DOMLoader } from '../../util'\r\n\r\nfunction playingBar(props) {\r\n\r\n  const { totalWords, current, estimatedTime } = props.playerReducer;\r\n  \r\n  function handleStop() {\r\n    DOMLoader.show();\r\n    Player.stop();\r\n  }\r\n\r\n  return (\r\n    <div className=\"playing-bar\" id=\"player\">\r\n      <div className=\"playing-bar-content\">\r\n        <span>Listening {current}/{totalWords}</span>\r\n        <div className=\"right-container\">\r\n          <span>ET: {estimatedTime != null ? estimatedTime + \"min.\" : \"calculing...\" }</span>\r\n          <i className=\"material-icons\" onClick={handleStop}>stop</i>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    playerReducer: state.playerReducer\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  \r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(playingBar)\r\n","import React from 'react';\r\nimport './styles.css';\r\n\r\nexport default function PlayingTooltip() {\r\n  return (\r\n    <em className=\"playing-tooltip\">\r\n      <i className=\"material-icons\">play_arrow</i>\r\n      Playing\r\n    </em>\r\n  )\r\n}","import React from 'react';\r\nimport PlayingTooltip from '../playingTooltip/playingTooltip';\r\nimport { setTimesColor } from '../../util/setItemTimesColor';\r\nimport { setSelectedWord } from '../../redux/actions';\r\nimport { connect } from 'react-redux';\r\nimport './styles.css';\r\n\r\nfunction item(props) {\r\n\r\n  function wordClickHandler() {\r\n    props.setSelectedWord(props.data);\r\n  }\r\n\r\n  const { _id, word, meaning, times_played } = props.data;\r\n  const averageDiff = times_played - props.average;\r\n  const currentWordId = props.playerReducer.playing_id;\r\n\r\n  return (\r\n    <div className=\"card-container\" onClick={wordClickHandler}>\r\n      <div className=\"word-item-container\">\r\n        <div className=\"word-container\">\r\n          <div className=\"inline-container\">\r\n            <h3>{ word }</h3>\r\n            { currentWordId === _id ? <PlayingTooltip /> : <h5>{times_played}t.</h5> }\r\n          </div>\r\n          <div className=\"inline-container mt2\">\r\n            <h4>{ meaning }</h4>\r\n            <span className={setTimesColor(times_played)}>{ Math.sign(averageDiff) === 1 ? '+' : null}{averageDiff}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    playerReducer: state.playerReducer\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setSelectedWord\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(item);","import React from 'react';\r\nimport WordItem from '../wordItem/wordItem';\r\nimport { connect } from 'react-redux'\r\n\r\nfunction WordList(props) {\r\n  const { words, average } = props;\r\n\r\n    return (\r\n      <div className=\"main_content\">\r\n        {\r\n          words.map(word => <WordItem key={word._id} data={word} average={average} />)\r\n        }\r\n      </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  words: state.wordsReducer.words,\r\n  average: state.wordsReducer.studiedAverage\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps)(WordList);\r\n","  import React from 'react';\r\nimport './styles.css';\r\n\r\nexport default function menuItem(props) {\r\n  const { icon, text, onClickEvent, customClass } = props;\r\n\r\n  return (\r\n    <span className=\"menuItem\" onClick={onClickEvent}>\r\n      <i className={\"material-icons \" + customClass }>{ icon }</i>\r\n      <span>{ text }</span>\r\n    </span>\r\n  )\r\n}","import React from 'react';\r\nimport HyperModal from 'react-hyper-modal';\r\nimport { connect } from 'react-redux';\r\nimport { setModalStatus, setLanguage, setWordsList } from '../../redux/actions';\r\nimport MenuItem from '../menuItem/menuItem';\r\nimport { Player, Speech, DOMLoader } from '../../util'\r\n\r\nfunction menu(props) {\r\n\r\n  function closeModal() {\r\n    props.setModalStatus('menuModal', false);\r\n  };\r\n\r\n  function switchLanguage() {\r\n    closeModal();\r\n    props.setWordsList([]);\r\n    props.setLanguage(null);\r\n  }\r\n\r\n  function createHandler() {\r\n    closeModal();\r\n    props.setModalStatus('addEditModal', true);\r\n  }\r\n\r\n  function repeatTimesHanlder() {\r\n    closeModal();\r\n    props.setModalStatus('repeatTimesModal', true);\r\n  }\r\n\r\n  function playWordsHandler() {\r\n    Speech.open();\r\n    DOMLoader.show();\r\n    closeModal();\r\n    setTimeout(() => {\r\n      DOMLoader.hidde();\r\n      Player.play(props.words.words, props.words.repeat_times.repeat_times);\r\n    }, 1300);\r\n  }\r\n\r\n  const { isModalOpen, language } = props;\r\n\r\n  return (\r\n    <HyperModal\r\n      isOpen={isModalOpen}\r\n      requestClose={closeModal}\r\n      position={{alignItems: 'flex-start', justifyContent: 'flex-end'}}\r\n      classes={{contentClassName: 'menu-modal-container'}}\r\n    >\r\n      <div className=\"menu-modal\">\r\n        {\r\n          language.code === 'all' ? null : <MenuItem icon=\"add\" text=\"Create\" onClickEvent={createHandler} />\r\n        }\r\n        <MenuItem icon=\"play_arrow\" text=\"Study\" onClickEvent={playWordsHandler} />\r\n        <MenuItem icon=\"update\" text=\"Change times\" customClass=\"smallest\" onClickEvent={repeatTimesHanlder} />\r\n        <MenuItem icon=\"public\" text=\"Switch Language\" customClass=\"smallest\" onClickEvent={switchLanguage} />\r\n      </div>  \r\n    </HyperModal>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isModalOpen: state.modalsReducer.menuModal,\r\n    language: state.languageReducer.language,\r\n    words: state.wordsReducer\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setModalStatus,\r\n  setLanguage,\r\n  setWordsList\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(menu);\r\n","  \r\nimport React from 'react';\r\nimport './styles.css';\r\n\r\nexport default function times(props) {\r\n  const { text, icon, bg_color } = props;\r\n\r\n  return (\r\n    <div className={\"modal-tag-item \" + bg_color}>\r\n      <i className=\"material-icons\">{icon}</i>\r\n      <span>{text}</span>\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport './styles.css';\r\n\r\nexport default function modalBtn(props) {\r\n  const { tagClass, icon, text, onClickEvent } = props;\r\n\r\n  return (\r\n    <span className={\"modal-btn \" + tagClass} onClick={onClickEvent}>\r\n      <i className=\"material-icons\">{ icon }</i>\r\n      { text }\r\n    </span>\r\n  )\r\n}","import React from 'react';\r\nimport HyperModal from 'react-hyper-modal';\r\nimport { connect } from 'react-redux';\r\nimport { setSelectedWord, setModalStatus } from '../../redux/actions';\r\nimport Tag from '../tag/tag';\r\nimport Button from '../button/button';\r\nimport { setTimesColor, updateActiveWordListFromAPI, Speech, Player, DOMLoader } from '../../util'\r\nimport moment from \"moment\";\r\nimport { deleteWord, setWordAsLearned } from '../../services/words';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction cardDetails(props) {\r\n\r\n  let isFirstTime = true;\r\n\r\n  function closeModal() {\r\n    props.setSelectedWord(null);\r\n  };\r\n\r\n  function editWordHandler() {\r\n    props.setModalStatus('addEditModal', true);\r\n  }\r\n\r\n  function deleteWordHandler(id) {\r\n    const confirmation = window.confirm(\"Are you sure? Delete a word is irreversible\");\r\n    if (confirmation !== true) {\r\n      return;\r\n    }\r\n\r\n    deleteWord(id)\r\n      .then(res => updateActiveWordListFromAPI(props.language.code))\r\n      .then(() => props.setSelectedWord(null))\r\n      .catch(err => toast.error(err))\r\n  }\r\n\r\n  function moveToLearnedHandler(id) {\r\n    setWordAsLearned(id)\r\n      .then(() => updateActiveWordListFromAPI(props.language.code))\r\n      .then(() => props.setSelectedWord(null))\r\n      .catch(err => toast.error(err))\r\n  }\r\n\r\n  function readWord(word) {\r\n    DOMLoader.show();\r\n    Speech.open();\r\n    setTimeout(() => {\r\n      isFirstTime = false;\r\n      DOMLoader.hidde();\r\n      Player.play([word])\r\n    }, isFirstTime ? 600 : 200);\r\n  }\r\n\r\n  const { word } = props;\r\n  const creationDate = moment(word?.created);\r\n  const today = moment.utc().format();\r\n  const daysDifference = creationDate.diff(today, 'days');\r\n\r\n  return (\r\n    <HyperModal\r\n      isOpen={word}\r\n      requestClose={closeModal}\r\n      classes={{contentClassName: (word ? 'app-modal' : 'app-modal app-modal-p0')}}\r\n    >\r\n      {\r\n        word ?\r\n        <div className=\"info-modal\">\r\n        <div className=\"word-container\">\r\n          <h3>{ word?.word }</h3>\r\n          <h4>{ word?.meaning }</h4>\r\n        </div>\r\n        <div className=\"tag-container\">\r\n          <Tag text={\"Listened \" + word?.times_played + (word?.times_played === 1 ? ' time' : ' times')} icon=\"access_time\" bg_color={setTimesColor(word?.times_played)} />\r\n          <Tag text={daysDifference === 0 ? 'Created today' : \"Created \" + daysDifference.toString().replace(/\\-/g, '') + \" days ago\" } icon=\"history\" bg_color=\"bg_gray\" />\r\n        </div>\r\n        <div className=\"actions\">\r\n          <Button tagClass=\"btn_bc_red\" icon=\"delete\" text=\"DELETE\" onClickEvent={() => deleteWordHandler(word._id)} />\r\n          <Button tagClass=\"btn_bc_yellow\" icon=\"edit\" text=\"EDIT\" onClickEvent={() => editWordHandler(word._id)}/>\r\n          <Button tagClass=\"btn_bc_blue\" icon=\"record_voice_over\" text=\"PLAY\" onClickEvent={() => readWord(word)} />\r\n          <Button tagClass=\"btn_bc_green\" icon=\"save\" text=\"STORE\" onClickEvent={() => moveToLearnedHandler(word._id) } />\r\n        </div>\r\n      </div>\r\n      : <></>\r\n      }\r\n    </HyperModal>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    word: state.wordsReducer.selectedWord,\r\n    language: state.languageReducer.language\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setSelectedWord,\r\n  setModalStatus\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(cardDetails);\r\n","import React, { Component } from 'react';\r\nimport HyperModal from 'react-hyper-modal';\r\nimport { connect } from 'react-redux';\r\nimport { setModalStatus, setSelectedWord } from '../../redux/actions';\r\nimport Button from '../button/button';\r\nimport { matchWord, createWord, editWord } from '../../services/words';\r\nimport moment from \"moment\";\r\nimport { updateActiveWordListFromAPI } from '../../util';\r\nimport { toast } from 'react-toastify';\r\n\r\nclass addEditModal extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.initialState = {\r\n      _id: null,\r\n      word: '',\r\n      meaning: '',\r\n      created: null,\r\n      location: 'ACTIVE',\r\n      language: null,\r\n      times_played: 0,\r\n      wordsMatched: []\r\n    }\r\n\r\n    this.state = this.initialState;\r\n  }\r\n\r\n  componentWillReceiveProps(newProps) {\r\n    const { word } = newProps;\r\n\r\n    if (!word) {\r\n      return this.setState(this.initialState);\r\n    }\r\n\r\n    this.setState(word)\r\n  }\r\n\r\n  closeAndResetState = () => {\r\n    this.props.setModalStatus('addEditModal', false);\r\n    this.setState(this.initialState);\r\n  }\r\n\r\n  handleKeyDown = (e) => {\r\n    if (e.key === 'Enter' || e.key === 'Return' ) {\r\n      this.addEditWord();\r\n    }\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n\r\n    if(name === \"word\" && value) {\r\n      matchWord(value)\r\n        .then(done => this.setState({ wordsMatched: done.data }))\r\n        .catch(err => toast.error(err))\r\n    }\r\n  }\r\n  // validator and switcher between endpoints\r\n  addEditWord = () => {\r\n    const { _id, word, meaning, wordsMatched } = this.state;\r\n\r\n    if(word === '' || (wordsMatched.length === 0 && meaning === '')) {\r\n      return toast.warn('All fields required');\r\n    }\r\n\r\n    if (_id) {\r\n      return this.editWordHandler();\r\n    }\r\n\r\n    this.addWordHandler();\r\n  }\r\n\r\n  // add word endpoint\r\n  addWordHandler = () => {\r\n    let statusCode;\r\n    const word = this.state;\r\n    word.created = moment().utc().format();\r\n    word.language = this.props.language.code;\r\n    createWord(word)\r\n      .then(res => {\r\n        statusCode = res;\r\n        return updateActiveWordListFromAPI(this.props.language.code);\r\n      })\r\n      .then(() => {\r\n        let message = statusCode === 201 ? \"Created successfully\" : statusCode === 200 ? \"Moved to active\" : '';\r\n        document.getElementById('word_input').focus();\r\n        this.setState(this.initialState);\r\n        toast.success(message);\r\n      })\r\n      .catch(err => toast.error(err))\r\n  }\r\n\r\n  // edit word endpoint\r\n  editWordHandler = () => {\r\n    editWord(this.state)\r\n      .then(() => updateActiveWordListFromAPI(this.props.language.code))\r\n      .then(() => {\r\n        this.props.setSelectedWord(this.state);\r\n        this.closeAndResetState();\r\n      })\r\n      .catch(err => toast.error(err))\r\n  }\r\n    \r\n  render() {\r\n\r\n    const { isModalOpen } = this.props;\r\n    const { _id, word, meaning, wordsMatched } = this.state;\r\n\r\n    return (\r\n      <HyperModal\r\n        isOpen={isModalOpen}\r\n        requestClose={this.closeAndResetState}\r\n        classes={{contentClassName: 'app-modal'}}\r\n      >\r\n        <div className=\"add-modal\">\r\n            <div className=\"word-container\">\r\n              <input id='word_input' autoComplete=\"off\" className=\"japanese\" type=\"text\" placeholder=\"Word\" lang=\"jp\" value={word} name=\"word\" onChange={this.handleChange} />\r\n              <input disabled={wordsMatched.length > 0} autoComplete=\"off\" type=\"text\" placeholder=\"Meaning\" lang=\"es\" value={meaning} name=\"meaning\" onChange={this.handleChange} onKeyDown={this.handleKeyDown} />\r\n            </div>\r\n            <div className=\"match-area\">\r\n              {\r\n                wordsMatched.map(w => <span key={w._id}>{w.word}: <em>{w.meaning}</em></span>)\r\n              }\r\n            </div>\r\n            <div className=\"actions\">\r\n              <Button tagClass=\"btn_bc_blue\" icon=\"close\" text=\"CLOSE\" onClickEvent={this.closeAndResetState} />\r\n              <Button tagClass=\"btn_bc_green\" icon={_id ? 'save': 'backup'} text={_id ? 'SAVE': wordsMatched.length === 0 ? 'ADD' : 'SET ACTIVE'} onClickEvent={this.addEditWord} />\r\n            </div>\r\n          </div>\r\n      </HyperModal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isModalOpen: state.modalsReducer.addEditModal,\r\n    word: state.wordsReducer.selectedWord,\r\n    language: state.languageReducer.language\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setModalStatus,\r\n  setSelectedWord\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(addEditModal);\r\n","import React, { Component } from 'react';\r\nimport HyperModal from 'react-hyper-modal';\r\nimport { connect } from 'react-redux';\r\nimport { setModalStatus, setRepeatTimes } from '../../redux/actions';\r\nimport ModalBtn from '../button/button';\r\nimport { updateTimesToRepeat } from '../../services/config';\r\nimport { toast } from 'react-toastify';\r\n\r\nclass repeatTimes extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n  \r\n    this.state = {\r\n      id: null,\r\n      times: null\r\n    }\r\n  }\r\n\r\n  closeModal = () => {\r\n    this.props.setModalStatus('repeatTimesModal', false);\r\n  };\r\n\r\n  componentWillReceiveProps(newProps) {\r\n    const { timesToRepeat } = newProps;\r\n    this.setState({\r\n      id: timesToRepeat._id,\r\n      times: String(timesToRepeat.repeat_times)\r\n    })\r\n  }\r\n\r\n  onChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n }\r\n\r\n  updateTimes = () => {\r\n    let { times, id } = this.state;\r\n    times = parseInt(times);\r\n\r\n    if(!times) {\r\n      return toast.warn('Not a number');\r\n    }\r\n\r\n    updateTimesToRepeat(id, times)\r\n      .then(config => {\r\n        this.props.setRepeatTimes(config);\r\n        this.closeModal();\r\n        toast.success('Updated');\r\n      })\r\n      .catch(err => toast.error(err))\r\n  }\r\n\r\n  render() {\r\n    const { isModalOpen } = this.props;\r\n\r\n    return (\r\n      <HyperModal\r\n        isOpen={isModalOpen}\r\n        requestClose={this.closeModal}\r\n        classes={{contentClassName: 'app-modal'}}\r\n      >\r\n        <div className=\"config-modal\">\r\n          <h2>Enter how many times do you want to play each word</h2>\r\n          <input name=\"times\" type=\"text\" value={this.state.times || ''} onChange={this.onChange} />\r\n          <div className=\"actions\">\r\n            <ModalBtn tagClass=\"btn_bc_blue\" icon=\"close\" text=\"CLOSE\" onClickEvent={this.closeModal} />\r\n            <ModalBtn tagClass=\"btn_bc_green\" icon='save' text='SAVE' onClickEvent={this.updateTimes} />\r\n          </div>\r\n        </div>\r\n      </HyperModal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isModalOpen: state.modalsReducer.repeatTimesModal,\r\n    timesToRepeat: state.wordsReducer.repeat_times\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setModalStatus,\r\n  setRepeatTimes\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(repeatTimes);\r\n","import axios from 'axios';\r\n\r\nexport const getConfig = (language) => {\r\n  return new Promise((resolve, reject) => {\r\n    axios.get(process.env.REACT_APP_SERVER_IP + '/config/load/' + language)\r\n      .then(res => resolve(res.data))\r\n      .catch(err => reject(err));\r\n  })\r\n};\r\n\r\nexport const updateTimesToRepeat = (id, times) => {\r\n  return new Promise((resolve, reject) => {\r\n    axios.post(process.env.REACT_APP_SERVER_IP + '/config/update/' + id, { times })\r\n      .then(res => resolve(res.data))\r\n      .catch(err => reject(err));\r\n  })\r\n};","import React from 'react';\r\nimport MenuModal from '../modalMenu/menu';\r\nimport CardDetails from '../modalCardDetails/cardDetails';\r\nimport AddEditCard from '../modalAddEditCard/addEdit';\r\nimport RepeatTimesModal from '../modalRepeatTimes/repeatTimesModal';\r\n\r\nexport default function modals() {\r\n  return (\r\n    <>\r\n      <MenuModal />\r\n      <CardDetails />\r\n      <AddEditCard />\r\n      <RepeatTimesModal />\r\n    </>\r\n  )\r\n}","import React, { Component } from 'react';\r\nimport Header from '../components/header/header';\r\nimport PlayingBar from '../components/playingBar/playingBar';\r\nimport WordList from '../components/wordList/wordList';\r\nimport AppModals from '../components/appModals/modals';\r\n\r\nexport default class Home extends Component {\r\n  render() {\r\n\r\n    return (\r\n      <>\r\n        <Header />\r\n        <WordList />\r\n        <AppModals />\r\n        <footer>\r\n          <PlayingBar />\r\n        </footer>\r\n      </>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './styles.css';\r\n\r\nexport default function language(props) {\r\n\r\n  const { data, onClickEvent } = props;\r\n\r\n  return (\r\n    <div className='language-item' onClick={onClickEvent}>\r\n      <img src={data.img} alt={data.code} />\r\n      <h1>{data.name}</h1>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setLanguage } from '../../redux/actions';\r\nimport { updateActiveWordListFromAPI, setInitialData } from '.././../util';\r\nimport LanguageItem from '../../components/languageItem/language';\r\nimport { languages } from '../../data/availableLanguages';\r\nimport { getConfig } from '../../services/config';\r\nimport './styles.css';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction welcomeScreen(props) {\r\n\r\n  function setLanguageHandler(lang) {\r\n    getConfig(lang.code)\r\n      .then(data => {\r\n        setInitialData(data);\r\n        props.setLanguage(lang);\r\n        return updateActiveWordListFromAPI(lang.code);\r\n      })\r\n      .catch(err => toast.error(err))\r\n  }\r\n\r\n  return (\r\n    <div className='welcomeScreen'>\r\n      <div className=\"container\">\r\n        <h2>Select a language</h2>\r\n        <div className=\"language-list\">\r\n          {\r\n            languages.map(lang => <LanguageItem key={lang.code} data={lang} onClickEvent={() => setLanguageHandler(lang)} />)\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setLanguage\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(welcomeScreen)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Dashboard from './dashboard';\r\nimport Welcome from './welcome/welcomeScreen';\r\nimport { DOMLoader } from '../util'\r\n\r\nclass Containers extends Component {\r\n\r\n  componentDidMount() {\r\n    DOMLoader.hidde();\r\n  }\r\n\r\n  render() {\r\n    return this.props.language ? <Dashboard /> : <Welcome />\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({ language: state.languageReducer.language })\r\n\r\nexport default connect(mapStateToProps)(Containers);\r\n","import './sharedStyles/index';\nimport { Store } from './redux/store';\nimport { Provider } from \"react-redux\";\nimport Container from \"./containers/containers\";\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction App() {\n  return (\n    <Provider store={Store}>\n      <Container />\n      <ToastContainer\n        autoClose={3000}\n        position=\"bottom-right\"\n        pauseOnHover={false}\n        pauseOnFocusLoss={false}\n      />\n    </Provider>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}