{"version":3,"sources":["redux/actions/modals.js","redux/reducers/modals.js","redux/actions/words.js","redux/reducers/words.js","redux/actions/player.js","redux/reducers/player.js","redux/actions/DOMLoader.js","redux/reducers/DOMLoader.js","redux/store.js","components/header/header.jsx","util/setItemTimesColor.js","services/words.js","util/updateWordsListFromServer.js","util/setInitialData.js","util/tts.js","data/availableLanguages.js","util/googleCodes.js","util/player.js","util/numbers.js","util/player_bar.js","util/DOMLoader.js","components/playingBar/playingBar.jsx","components/playingTooltip/playingTooltip.jsx","components/wordItem/wordItem.jsx","components/wordList/wordList.jsx","components/menuItem/menuItem.jsx","components/modalMenu/menu.jsx","components/tag/tag.jsx","components/button/button.jsx","components/modalCardDetails/cardDetails.jsx","components/modalAddEditCard/addEdit.jsx","components/modalRepeatTimes/repeatTimesModal.jsx","services/config.js","components/appModals/modals.jsx","components/previewImage/preview.jsx","containers/dashboard.jsx","App.js","index.js"],"names":["type","setModalStatus","modalName","newStatus","payload","initialState","addEditModal","menuModal","repeatTimesModal","modalsReducer","state","modalTypes","currentKey","setWordsList","words","setSelectedWord","word","setRepeatTimes","times","addReproducedTime","id","selectedWord","studiedAverage","repeat_times","wordsReducer","wordTypes","map","_id","times_played","setPlayingId","setTotalWords","total","setEstimatedTime","time","addIteration","playing_id","estimatedTime","totalWords","current","playerReducer","playerTypes","setDOMLoaderStatus","status","isModalVisible","loaderReducer","loaderTypes","reducer","combineReducers","domLoader","devtoools","window","__REDUX_DEVTOOLS_EXTENSION__","Store","createStore","mapDispatchToProps","connect","props","src","alt","className","onClick","setTimesColor","setWordsAsLearned","wordsList","Promise","resolve","reject","Array","isArray","axios","post","process","then","res","catch","err","addTimeCounted","patch","updateActiveWordListFromAPI","language","get","data","dispatch","setInitialData","average","config","Speech","text","lang","synth","speechSynthesis","voices","getVoices","timer","setInterval","length","clearInterval","DOMLoader","hidde","textToRead","SpeechSynthesisUtterance","chosenItem","filter","voice","voiceURI","speak","onend","languages","name","code","img","google_id_pc","google_id_mobile","GoogleLanguage","isMobile","Player","canPlay","play","tempWords","a","this","push","fill","PlayerBar","showPlayer","i","resetPlayer","next","t0","performance","now","meaning","t1","NumbersUtilities","millisToMinutesAndSeconds","Number","stop","hiddePlayer","millis","minutes","Math","floor","seconds","toFixed","document","getElementById","style","display","notification","animationName","setTimeout","element","classList","add","show","remove","PlayingTooltip","averageDiff","currentWordId","imgURL","find","l","sign","menuItem","icon","onClickEvent","customClass","isModalOpen","closeModal","isOpen","requestClose","position","alignItems","justifyContent","classes","contentClassName","confirm","w","toast","info","bg_color","modalBtn","tagClass","deleteWordHandler","delete","deleteWord","error","creationDate","moment","created","today","utc","format","daysDifference","diff","toString","replace","readWord","closeAndResetState","setState","handleKeyDown","e","key","target","wordsMatched","addEditWord","focus","handleChange","value","matchWord","done","warn","editWordHandler","addWordHandler","statusCode","createWord","message","success","put","image_url","location","newProps","autoComplete","placeholder","onChange","onKeyDown","disabled","color","Component","repeatTimes","updateTimes","parseInt","updateTimesToRepeat","timesToRepeat","String","modals","Home","App","store","autoClose","pauseOnHover","pauseOnFocusLoss","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.63478edc.chunk.js","sourcesContent":["export const type = {\r\n  set: \"SET_MODAL_STATUS\"\r\n};\r\n\r\nexport const setModalStatus = (modalName, newStatus) => ({\r\n  type: type.set,\r\n  payload: {\r\n    modalName,\r\n    newStatus\r\n  }\r\n});","import { type as modalTypes } from \"../actions/modals\";\r\n\r\nconst initialState = {\r\n  addEditModal: false,\r\n  menuModal: false,\r\n  repeatTimesModal: false\r\n};\r\n\r\nconst modalsReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case modalTypes.set:\r\n      const currentKey = payload.modalName;\r\n      return {\r\n        ...state,\r\n        [currentKey]: payload.newStatus\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default modalsReducer;","export const type = {\r\n  set_list: \"SET_WORDS_LIST\",\r\n  set_selected_word: \"SET_SELECTED_WORD\",\r\n  set_average_times: \"SET_AVERAGE_TIMES\",\r\n  set_repeat_times: \"SET_REPEAT_TIMES\",\r\n  add_reproduced_time: \"ADD_REPRODUCED_TIME\"\r\n};\r\n\r\nexport const setWordsList = (words) => ({\r\n  type: type.set_list,\r\n  payload: words\r\n});\r\n\r\nexport const setSelectedWord = (word) => ({\r\n  type: type.set_selected_word,\r\n  payload: word\r\n});\r\n\r\nexport const setAverageTimes = (times) => ({\r\n  type: type.set_average_times,\r\n  payload: times\r\n});\r\n\r\nexport const setRepeatTimes = (times) => ({\r\n  type: type.set_repeat_times,\r\n  payload: times\r\n});\r\n\r\nexport const addReproducedTime = (id) => ({\r\n  type: type.add_reproduced_time,\r\n  payload: id\r\n});\r\n\r\n","import { type as wordTypes } from \"../actions/words\";\r\n\r\nconst initialState = {\r\n  words: [],\r\n  selectedWord: null,\r\n  studiedAverage: 0,\r\n  repeat_times: null\r\n};\r\n\r\nconst wordsReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case wordTypes.set_list:\r\n      return {\r\n        ...state,\r\n        words: payload,\r\n      }\r\n    case wordTypes.set_selected_word:\r\n      return {\r\n        ...state,\r\n        selectedWord: payload\r\n      }\r\n    case wordTypes.set_average_times:\r\n      return {\r\n        ...state,\r\n        studiedAverage: payload\r\n      }\r\n    case wordTypes.set_repeat_times:\r\n      return {\r\n        ...state,\r\n        repeat_times: payload\r\n      }\r\n    case wordTypes.add_reproduced_time:\r\n      const words = state.words.map(word => {\r\n        if(word._id === payload) {\r\n          word.times_played = word.times_played + 1; \r\n        }\r\n\r\n        return word;\r\n      })\r\n      return {\r\n        ...state,\r\n        words\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default wordsReducer;","export const type = {\r\n  set_playing_id: 'SET_PLAYING_ID',\r\n  set_total_words: 'SET_TOTAL_WORDS',\r\n  set_estimated_time: 'SET_ESTIMATED_TIME',\r\n  add_iteration: 'ADD_ITERATION',\r\n  reset_data: 'RESET_DATA'\r\n}\r\n\r\nexport const setPlayingId = (id) => ({\r\n  type: type.set_playing_id,\r\n  payload: id\r\n})\r\n\r\nexport const setTotalWords = (total) => ({\r\n  type: type.set_total_words,\r\n  payload: total\r\n})\r\n\r\nexport const setEstimatedTime = (time) => ({\r\n  type: type.set_estimated_time,\r\n  payload: time\r\n})\r\n\r\nexport const addIteration = () => ({\r\n  type: type.add_iteration\r\n})\r\n\r\nexport const resetPlayerData = () => ({\r\n  type: type.reset_data\r\n});","import { type as playerTypes } from '../actions/player'\r\n\r\nconst initialState = {\r\n  playing_id: null,\r\n  estimatedTime: null,\r\n  totalWords: null,\r\n  current: 0\r\n}\r\n\r\nconst playerReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n\r\n  case playerTypes.set_playing_id:\r\n    return {\r\n      ...state,\r\n      playing_id: payload\r\n    }\r\n  case playerTypes.add_iteration:\r\n    return {\r\n      ...state,\r\n      current: state.current + 1\r\n    }\r\n  case playerTypes.set_estimated_time:\r\n    return {\r\n      ...state,\r\n      estimatedTime: payload\r\n    }\r\n  case playerTypes.set_total_words:\r\n    return {\r\n      ...state,\r\n      totalWords: payload\r\n    }\r\n  case playerTypes.reset_data:\r\n    return initialState\r\n\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport default playerReducer;","export const type = {\r\n  set: \"SET_LOADER_STATUS\"\r\n};\r\n\r\nexport const setDOMLoaderStatus = (status) => ({\r\n  type: type.set,\r\n  payload: status\r\n});","import { type as loaderTypes } from \"../actions/DOMLoader\";\r\n\r\nconst initialState = {\r\n  isModalVisible: true\r\n};\r\n\r\nconst loaderReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case loaderTypes.set:\r\n      return {\r\n        isModalVisible: payload\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default loaderReducer;","import { createStore, combineReducers } from 'redux'\r\n\r\nimport modalsReducer from \"./reducers/modals\";\r\nimport wordsReducer from \"./reducers/words\";\r\nimport playerReducer from \"./reducers/player\";\r\nimport domLoader from './reducers/DOMLoader';\r\n\r\nconst reducer = combineReducers({\r\n  modalsReducer,\r\n  wordsReducer,\r\n  playerReducer,\r\n  domLoader\r\n});\r\n\r\nconst devtoools = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n\r\nexport const Store = createStore(reducer, devtoools);\r\n","import React from 'react';\r\nimport './styles.css';\r\nimport { setModalStatus } from '../../redux/actions';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction header(props) {\r\n\r\n  function openDetailsModal() {\r\n    props.setModalStatus('menuModal', true);\r\n  }\r\n\r\n  return (\r\n    <header>\r\n      <span> <img src=\"https://upload.wikimedia.org/wikipedia/commons/2/2f/Flag_of_the_United_Nations.svg\" alt=\"all\"/>Words list</span>\r\n      <i className=\"material-icons\" onClick={openDetailsModal}>menu</i>\r\n    </header>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setModalStatus\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(header);","export function setTimesColor(times) {\r\n  if (times > 0 && times < 100) {\r\n    return \"bg_blue\"\r\n  } else if (times >= 100 && times < 200) {\r\n    return \"bg_yellow\"\r\n  } else if (times >= 200 && times < 400) {\r\n    return \"bg_red\"\r\n  } else if (times >= 400 && times < 500) {\r\n    return \"bg_red_str\"\r\n  } else if (times >= 500 && times < 550) {\r\n    return \"bg_purple\"\r\n  } else if (times >= 550 && times < 600) {\r\n    return \"bg_purple_str\"\r\n  } else if (times >= 600) {\r\n    return \"bg_black\"\r\n  }\r\n\r\n  return \"bg_green\";\r\n}","import axios from 'axios';\r\n\r\nexport const getWords = (language) => {\r\n  return new Promise((resolve, reject) => {\r\n    axios.get(process.env.REACT_APP_SERVER_IP + '/words/list/active/' + language)\r\n      .then(res => resolve(res.data))\r\n      .catch(err => reject(err));\r\n  })\r\n};\r\n\r\nexport const deleteWord = (id) => {\r\n  return new Promise((resolve, reject) => {\r\n    axios.delete(process.env.REACT_APP_SERVER_IP + '/words/delete/' + id)\r\n      .then(res => resolve(res))\r\n      .catch(err => reject(err));\r\n  })\r\n};\r\n\r\nexport const setWordsAsLearned = (wordsList) => {\r\n  return new Promise((resolve, reject) => {\r\n    if(!Array.isArray(wordsList)) {\r\n      return reject('Not an array');\r\n    }\r\n    axios.post(process.env.REACT_APP_SERVER_IP + '/words/setLearned', { words: wordsList })\r\n      .then(res => resolve(res))\r\n      .catch(err => reject(err));\r\n  })\r\n};\r\n\r\nexport const createWord = (word) => {\r\n  return new Promise((resolve, reject) => {\r\n    axios.post(process.env.REACT_APP_SERVER_IP + '/words/create', word)\r\n      .then(res => resolve(res.status))\r\n      .catch(err => reject(err));\r\n  })\r\n};\r\n\r\nexport const editWord = (word) => {\r\n  return new Promise((resolve, reject) => {\r\n    axios.put(process.env.REACT_APP_SERVER_IP + '/words/update/' + word._id, word)\r\n      .then(res => resolve(res))\r\n      .catch(err => reject(err));\r\n  })\r\n};\r\n\r\nexport const matchWord = (value) => {\r\n  return new Promise((resolve, reject) => {\r\n    axios.get(process.env.REACT_APP_SERVER_IP + '/words/match/' + value)\r\n      .then(res => resolve(res))\r\n      .catch(err => reject(err));\r\n  })\r\n};\r\n\r\nexport const addTimeCounted = (id) => {\r\n  return new Promise((resolve, reject) => {\r\n    axios.patch(process.env.REACT_APP_SERVER_IP + '/words/update/' + id + '/counter')\r\n      .then(res => resolve(res))\r\n      .catch(err => reject(err));\r\n  })\r\n};","import { getWords } from '../services/words';\r\nimport { Store } from '../redux/store';\r\nimport { setWordsList } from '../redux/actions/words';\r\n\r\nexport const updateActiveWordListFromAPI = () => {\r\n  return new Promise((resolve, reject) => {\r\n    getWords()\r\n      .then(data => Store.dispatch(setWordsList(data)))\r\n      .then(() => resolve())\r\n      .catch(err => reject(err))\r\n  })\r\n}","import { setAverageTimes, setRepeatTimes } from '../redux/actions';\r\nimport { Store } from '../redux/store';\r\n\r\nexport const setInitialData = (data) => {\r\n  Store.dispatch(setAverageTimes(data.average))\r\n  Store.dispatch(setRepeatTimes(data.config))\r\n}","import { DOMLoader } from './index';\r\n\r\nexport const Speech = {\r\n  /**\r\n   * This methods read the text sent as a parameter\r\n   * @param {String} text Text to speech\r\n   * @param {String} language Type voice\r\n   */\r\n  readText: (text, lang) => {\r\n    return new Promise((resolve, reject) => {\r\n      const synth = window.speechSynthesis;\r\n      let voices = synth.getVoices();\r\n\r\n      let timer = setInterval(() => {\r\n        if(!voices.length) {\r\n          voices = synth.getVoices();\r\n        } else {\r\n          clearInterval(timer);\r\n          DOMLoader.hidde();\r\n\r\n          let textToRead = new SpeechSynthesisUtterance(text);\r\n\r\n          const chosenItem = voices.filter(voice => voice.voiceURI === lang)[0];\r\n          textToRead.voice = chosenItem;\r\n          textToRead.lang = chosenItem.lang;\r\n\r\n          synth.speak(textToRead);\r\n          textToRead.onend = () => resolve();\r\n        }\r\n      }, 200);\r\n    });\r\n  },\r\n  getVoices: () => window.speechSynthesis.getVoices()\r\n};\r\n","export const languages = [\r\n  {\r\n    name: 'English GB',\r\n    code: 'en',\r\n    img: 'https://upload.wikimedia.org/wikipedia/en/a/ae/Flag_of_the_United_Kingdom.svg',\r\n    google_id_pc: 'Google UK English Female',\r\n    google_id_mobile: 'inglés Reino Unido',\r\n  },\r\n  {\r\n    name: '日本語',\r\n    code: 'jp',\r\n    img: 'https://upload.wikimedia.org/wikipedia/commons/9/9e/Flag_of_Japan.svg',\r\n    google_id_pc: 'Google 日本語',\r\n    google_id_mobile: 'japonés Japón',\r\n  }\r\n]","import { languages } from '../data/availableLanguages';\r\nimport { isMobile } from 'react-device-detect';\r\n\r\nexport const GoogleLanguage = {\r\n  getFromCode: (code) => languages.filter(lang => code === lang.code)[0][(isMobile ? 'google_id_mobile' : 'google_id_pc')],\r\n  spanish: () => isMobile ? 'español Estados Unidos' : 'Google español de Estados Unidos'\r\n}","import { Store } from '../redux/store';\r\nimport { Speech, GoogleLanguage, NumbersUtilities, PlayerBar, DOMLoader } from './index';\r\nimport { setTotalWords, setPlayingId, addIteration, setEstimatedTime, resetPlayerData, addReproducedTime } from '../redux/actions';\r\nimport { addTimeCounted } from '../services/words';\r\n\r\nexport const Player = {\r\n  canPlay: true,\r\n  /**\r\n   * Play words with the repeat times config\r\n   * \r\n   * @param {Array} words * Words to play\r\n   * @param {Object} times * Times to play each word\r\n   */\r\n  play: async function(tempWords, times = 1) {\r\n    if(!Array.isArray(tempWords)) {\r\n      return false;\r\n    }\r\n\r\n    this.canPlay = true;\r\n    let words = [];\r\n    tempWords.map(word => words.push(...new Array(times).fill(word)))\r\n    Store.dispatch(setTotalWords(words.length));\r\n    PlayerBar.showPlayer();\r\n\r\n    for(let i in words) {\r\n      if(!this.canPlay) {\r\n        DOMLoader.hidde();\r\n        this.resetPlayer();\r\n        break;\r\n      }\r\n      Store.dispatch(setPlayingId(words[i]._id));\r\n      Store.dispatch(addIteration());\r\n      Store.dispatch(addReproducedTime(words[i]._id));\r\n      await addTimeCounted(words[i]._id);\r\n      await new Promise(next => {\r\n        const t0 = performance.now();\r\n        Speech.readText(words[i].word, GoogleLanguage.getFromCode(words[i].language))\r\n          .then(() => Speech.readText(words[i].meaning, GoogleLanguage.spanish()))\r\n          .then(() => {\r\n            const t1 = performance.now();\r\n            const estimatedTime = (words.length - i) * (t1 - t0);\r\n            Store.dispatch(setEstimatedTime(NumbersUtilities.millisToMinutesAndSeconds(estimatedTime)))\r\n            return next();\r\n          })\r\n      })\r\n\r\n      if(Number(i) + 1 === words.length) {\r\n        this.resetPlayer();\r\n      }\r\n    }\r\n  },\r\n  stop: function() {\r\n    this.canPlay = false;\r\n  },\r\n  resetPlayer: function() {\r\n    PlayerBar.hiddePlayer();\r\n    Store.dispatch(resetPlayerData());\r\n  }\r\n}","export const NumbersUtilities = {\r\n  millisToMinutesAndSeconds: (millis) => {\r\n    var minutes = Math.floor(millis / 60000);\r\n    var seconds = ((millis % 60000) / 1000).toFixed(0);\r\n    return minutes + \":\" + (seconds < 10 ? '0' : '') + seconds;\r\n  }\r\n}","export const PlayerBar = {\r\n  /**\r\n   * Show player bar\r\n   */\r\n  showPlayer: () => {\r\n    const notification = document.getElementById('player');\r\n    notification.style.display = \"block\";\r\n  },\r\n  /**\r\n   * Hidde player bar\r\n   */\r\n  hiddePlayer: () => {\r\n    const notification = document.getElementById('player');\r\n    notification.style.animationName = 'fadeOutDown';\r\n      setTimeout(() => {\r\n        notification.style.display = 'none';\r\n        notification.style.animationName = 'fadeInUp';\r\n      }, 180);\r\n  }\r\n}","import { Store } from '../redux/store';\r\nimport { setDOMLoaderStatus } from '../redux/actions';\r\n\r\nexport const DOMLoader = {\r\n  element: document.getElementById('ipl-progress-indicator'),\r\n  hidde: function() {\r\n    if (this.element) {\r\n      setTimeout(() => {\r\n        this.element.classList.add('available');\r\n        Store.dispatch(setDOMLoaderStatus(false))\r\n      }, 100)\r\n    }\r\n  },\r\n  show: function() {\r\n    if (this.element) {\r\n      this.element.classList.remove('available');\r\n      Store.dispatch(setDOMLoaderStatus(true))\r\n    }\r\n  }\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './styles.css';\r\nimport { Player, DOMLoader } from '../../util'\r\n\r\nfunction playingBar(props) {\r\n\r\n  const { totalWords, current, estimatedTime } = props.playerReducer;\r\n  \r\n  function handleStop() {\r\n    DOMLoader.show();\r\n    Player.stop();\r\n  }\r\n\r\n  return (\r\n    <div className=\"playing-bar\" id=\"player\">\r\n      <div className=\"playing-bar-content\">\r\n        <span>Listening {current}/{totalWords}</span>\r\n        <div className=\"right-container\">\r\n          <span>ET: {estimatedTime != null ? estimatedTime + \"min.\" : \"calculing...\" }</span>\r\n          <i className=\"material-icons\" onClick={handleStop}>stop</i>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    playerReducer: state.playerReducer\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  \r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(playingBar)\r\n","import React from 'react';\r\nimport './styles.css';\r\n\r\nexport default function PlayingTooltip() {\r\n  return (\r\n    <em className=\"playing-tooltip\">\r\n      <i className=\"material-icons\">play_arrow</i>\r\n      Playing\r\n    </em>\r\n  )\r\n}","import React from 'react';\r\nimport PlayingTooltip from '../playingTooltip/playingTooltip';\r\nimport { setTimesColor } from '../../util/setItemTimesColor';\r\nimport { setSelectedWord } from '../../redux/actions';\r\nimport { connect } from 'react-redux';\r\nimport './styles.css';\r\nimport { languages } from '../../data/availableLanguages';\r\n\r\nfunction item(props) {\r\n\r\n  function wordClickHandler() {\r\n    props.setSelectedWord(props.data);\r\n  }\r\n\r\n  const { _id, word, meaning, times_played, language } = props.data;\r\n  const averageDiff = times_played - props.average;\r\n  const currentWordId = props.playerReducer.playing_id;\r\n  const imgURL = languages.find(l => l.code === language).img;\r\n\r\n  return (\r\n    <div className=\"card-container\" onClick={wordClickHandler}>\r\n      <div className=\"word-item-container\">\r\n        <div className=\"word-container\">\r\n          <div className=\"inline-container\">\r\n            <h3>{ word }</h3>\r\n            { currentWordId === _id ? <PlayingTooltip /> : <h5>{times_played}t.</h5> }\r\n          </div>\r\n          <div className=\"inline-container mt2\">\r\n            <h4>{ meaning }</h4>\r\n            <div className=\"flag-avg-container\">\r\n              <img src={ imgURL } alt=\"lang flag\"/>\r\n              <span className={setTimesColor(times_played)}>{ Math.sign(averageDiff) === 1 ? '+' : null}{averageDiff}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    playerReducer: state.playerReducer\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setSelectedWord\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(item);","import React from 'react';\r\nimport WordItem from '../wordItem/wordItem';\r\nimport { connect } from 'react-redux'\r\n\r\nfunction WordList(props) {\r\n  const { words, average } = props;\r\n\r\n    return (\r\n      <div className=\"main_content\">\r\n        {\r\n          words.map(word => <WordItem\r\n            key={word._id}\r\n            data={word}\r\n            average={average}\r\n          />)\r\n        }\r\n      </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  words: state.wordsReducer.words,\r\n  average: state.wordsReducer.studiedAverage\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps)(WordList);\r\n","  import React from 'react';\r\nimport './styles.css';\r\n\r\nexport default function menuItem(props) {\r\n  const { icon, text, onClickEvent, customClass } = props;\r\n\r\n  return (\r\n    <span className=\"menuItem\" onClick={onClickEvent}>\r\n      <i className={\"material-icons \" + customClass }>{ icon }</i>\r\n      <span>{ text }</span>\r\n    </span>\r\n  )\r\n}","import React from 'react';\r\nimport HyperModal from 'react-hyper-modal';\r\nimport { connect } from 'react-redux';\r\nimport { setModalStatus, setWordsList } from '../../redux/actions';\r\nimport MenuItem from '../menuItem/menuItem';\r\nimport { Player, DOMLoader, updateActiveWordListFromAPI } from '../../util'\r\nimport { setWordsAsLearned } from '../../services/words';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction menu(props) {\r\n\r\n  function closeModal() {\r\n    props.setModalStatus('menuModal', false);\r\n  };\r\n\r\n  function createHandler() {\r\n    closeModal();\r\n    props.setModalStatus('addEditModal', true);\r\n  }\r\n\r\n  function repeatTimesHanlder() {\r\n    closeModal();\r\n    props.setModalStatus('repeatTimesModal', true);\r\n  }\r\n\r\n  function playWordsHandler() {\r\n    DOMLoader.show();\r\n    closeModal();\r\n    Player.play(props.words.words, props.words.repeat_times.repeat_times);\r\n  }\r\n\r\n  function moveAllToLearned() {\r\n    const confirmation = window.confirm(\"Are you sure?\");\r\n    if (confirmation !== true) {\r\n      return;\r\n    }\r\n\r\n    DOMLoader.show();\r\n    setWordsAsLearned((props.words?.words?.map(w => w._id) || []))\r\n      .then(() => updateActiveWordListFromAPI())\r\n      .then(() => {\r\n        closeModal();\r\n        DOMLoader.hidde();\r\n        toast.info('Moved to learned')\r\n      })\r\n  }\r\n\r\n  const { isModalOpen } = props;\r\n\r\n  return (\r\n    <HyperModal\r\n      isOpen={isModalOpen}\r\n      requestClose={closeModal}\r\n      position={{alignItems: 'flex-start', justifyContent: 'flex-end'}}\r\n      classes={{contentClassName: 'menu-modal-container'}}\r\n    >\r\n      <div className=\"menu-modal\">\r\n        <MenuItem icon=\"add\" text=\"Create\" onClickEvent={createHandler} />\r\n        <MenuItem icon=\"bookmark\" text=\"All to learned\" customClass=\"smallest\" onClickEvent={moveAllToLearned} />\r\n        <MenuItem icon=\"play_arrow\" text=\"Study\" onClickEvent={playWordsHandler} />\r\n        <MenuItem icon=\"update\" text=\"Change times\" customClass=\"smallest\" onClickEvent={repeatTimesHanlder} />\r\n      </div>  \r\n    </HyperModal>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isModalOpen: state.modalsReducer.menuModal,\r\n    words: state.wordsReducer\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setModalStatus,\r\n  setWordsList\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(menu);\r\n","  \r\nimport React from 'react';\r\nimport './styles.css';\r\n\r\nexport default function times(props) {\r\n  const { text, icon, bg_color } = props;\r\n\r\n  return (\r\n    <div className={\"modal-tag-item \" + bg_color}>\r\n      <i className=\"material-icons\">{icon}</i>\r\n      <span>{text}</span>\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport './styles.css';\r\n\r\nexport default function modalBtn(props) {\r\n  const { tagClass, icon, text, onClickEvent } = props;\r\n\r\n  return (\r\n    <span className={\"modal-btn \" + tagClass} onClick={onClickEvent}>\r\n      <i className=\"material-icons\">{ icon }</i>\r\n      { text }\r\n    </span>\r\n  )\r\n}","import React from 'react';\r\nimport HyperModal from 'react-hyper-modal';\r\nimport { connect } from 'react-redux';\r\nimport { setSelectedWord, setModalStatus } from '../../redux/actions';\r\nimport Tag from '../tag/tag';\r\nimport Button from '../button/button';\r\nimport { setTimesColor, updateActiveWordListFromAPI, Player, DOMLoader } from '../../util'\r\nimport moment from \"moment\";\r\nimport { deleteWord, setWordsAsLearned } from '../../services/words';\r\nimport { toast } from 'react-toastify';\r\nimport { languages } from '../../data/availableLanguages';\r\n\r\nfunction cardDetails(props) {\r\n\r\n  function closeModal() {\r\n    props.setSelectedWord(null);\r\n  };\r\n\r\n  function editWordHandler() {\r\n    props.setModalStatus('addEditModal', true);\r\n  }\r\n\r\n  function deleteWordHandler(id) {\r\n    const confirmation = window.confirm(\"Are you sure? Delete a word is irreversible\");\r\n    if (confirmation !== true) {\r\n      return;\r\n    }\r\n\r\n    deleteWord(id)\r\n      .then(res => updateActiveWordListFromAPI())\r\n      .then(() => props.setSelectedWord(null))\r\n      .catch(err => toast.error(err))\r\n  }\r\n\r\n  function moveToLearnedHandler(id) {\r\n    setWordsAsLearned([id])\r\n      .then(() => updateActiveWordListFromAPI())\r\n      .then(() => props.setSelectedWord(null))\r\n      .catch(err => toast.error(err))\r\n  }\r\n\r\n  function readWord(word) {\r\n    DOMLoader.show();\r\n    Player.play([word])\r\n  }\r\n\r\n  const { word } = props;\r\n  const creationDate = moment(word?.created);\r\n  const today = moment.utc().format();\r\n  const daysDifference = creationDate.diff(today, 'days');\r\n\r\n  return (\r\n    <HyperModal\r\n      isOpen={word}\r\n      requestClose={closeModal}\r\n      classes={{contentClassName: (word ? 'app-modal' : 'app-modal app-modal-p0')}}\r\n    >\r\n      {\r\n        word ?\r\n        <div className=\"info-modal\">\r\n        <div className=\"word-container\">\r\n          <h3>{ word?.word }</h3>\r\n          <h4>{ word?.meaning }</h4>\r\n        </div>\r\n        <div className=\"tag-container\">\r\n          <Tag text={\"Listened \" + word?.times_played + (word?.times_played === 1 ? ' time' : ' times')} icon=\"access_time\" bg_color={setTimesColor(word?.times_played)} />\r\n          <Tag text={daysDifference === 0 ? 'Created today' : \"Created \" + daysDifference.toString().replace(/\\-/g, '') + \" days ago\" } icon=\"history\" bg_color=\"bg_gray\" />\r\n          <Tag text={languages.find(l => l.code === word.language).name} icon=\"public\" bg_color=\"bg_purple\" />\r\n        </div>\r\n        <div className=\"actions\">\r\n          <Button tagClass=\"btn_bc_red\" icon=\"delete\" text=\"DELETE\" onClickEvent={() => deleteWordHandler(word._id)} />\r\n          <Button tagClass=\"btn_bc_yellow\" icon=\"edit\" text=\"EDIT\" onClickEvent={() => editWordHandler(word._id)}/>\r\n          <Button tagClass=\"btn_bc_blue\" icon=\"record_voice_over\" text=\"PLAY\" onClickEvent={() => readWord(word)} />\r\n          <Button tagClass=\"btn_bc_green\" icon=\"save\" text=\"STORE\" onClickEvent={() => moveToLearnedHandler(word._id) } />\r\n        </div>\r\n      </div>\r\n      : <></>\r\n      }\r\n    </HyperModal>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    word: state.wordsReducer.selectedWord\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setSelectedWord,\r\n  setModalStatus\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(cardDetails);\r\n","import React, { Component } from 'react';\r\nimport HyperModal from 'react-hyper-modal';\r\nimport { connect } from 'react-redux';\r\nimport { setModalStatus, setSelectedWord } from '../../redux/actions';\r\nimport Button from '../button/button';\r\nimport { matchWord, createWord, editWord } from '../../services/words';\r\nimport moment from \"moment\";\r\nimport { updateActiveWordListFromAPI } from '../../util';\r\nimport { toast } from 'react-toastify';\r\nimport { languages } from '../../data/availableLanguages';\r\n\r\nclass addEditModal extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.initialState = {\r\n      _id: null,\r\n      word: '',\r\n      meaning: '',\r\n      created: null,\r\n      image_url: '',\r\n      location: 'ACTIVE',\r\n      language: languages[0].code,\r\n      times_played: 0,\r\n      wordsMatched: []\r\n    }\r\n\r\n    this.state = this.initialState;\r\n  }\r\n\r\n  componentWillReceiveProps(newProps) {\r\n    const { word } = newProps;\r\n\r\n    if (!word) {\r\n      return this.setState(this.initialState);\r\n    }\r\n\r\n    this.setState(word)\r\n  }\r\n\r\n  closeAndResetState = () => {\r\n    this.props.setModalStatus('addEditModal', false);\r\n    this.setState(this.initialState);\r\n  }\r\n\r\n  handleKeyDown = (e) => {\r\n    if (e.key === 'Enter' || e.key === 'Return' ) {\r\n      if(e.target.name === 'image_url' || e.target.name === 'meaning' || (this.state.wordsMatched.length > 0 && e.target.name === 'word')) {\r\n        this.addEditWord();\r\n        return document.getElementById('word_input').focus();\r\n      } else if(e.target.name === 'word') {\r\n        return document.getElementById('meaning_input').focus();;\r\n      }\r\n    }\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n\r\n    if(name === \"word\" && value) {\r\n      matchWord(value)\r\n        .then(done => this.setState({ wordsMatched: done.data }))\r\n        .catch(err => toast.error(err))\r\n    }\r\n  }\r\n  // validator and switcher between endpoints\r\n  addEditWord = () => {\r\n    const { _id, word, meaning, wordsMatched } = this.state;\r\n\r\n    if(word === '' || (wordsMatched.length === 0 && meaning === '')) {\r\n      return toast.warn('All fields required');\r\n    }\r\n\r\n    if (_id) {\r\n      return this.editWordHandler();\r\n    }\r\n\r\n    this.addWordHandler();\r\n  }\r\n\r\n  // add word endpoint\r\n  addWordHandler = () => {\r\n    let statusCode;\r\n    const word = this.state;\r\n    word.created = moment().utc().format();\r\n    createWord(word)\r\n      .then(res => {\r\n        statusCode = res;\r\n        return updateActiveWordListFromAPI();\r\n      })\r\n      .then(() => {\r\n        let message = statusCode === 201 ? \"Created successfully\" : statusCode === 200 ? \"Moved to active\" : '';\r\n        this.setState(this.initialState);\r\n        this.setState({ language: word.language })\r\n        toast.success(message);\r\n      })\r\n      .catch(err => toast.error(err))\r\n  }\r\n\r\n  // edit word endpoint\r\n  editWordHandler = () => {\r\n    editWord(this.state)\r\n      .then(() => updateActiveWordListFromAPI())\r\n      .then(() => {\r\n        this.props.setSelectedWord(this.state);\r\n        this.closeAndResetState();\r\n      })\r\n      .catch(err => toast.error(err))\r\n  }\r\n    \r\n  render() {\r\n\r\n    const { isModalOpen } = this.props;\r\n    const { _id, word, meaning, wordsMatched, image_url } = this.state;\r\n\r\n    return (\r\n      <HyperModal\r\n        isOpen={isModalOpen}\r\n        requestClose={this.closeAndResetState}\r\n        classes={{contentClassName: 'app-modal'}}\r\n      >\r\n        <div className=\"add-modal\">\r\n            <div className=\"word-container\">\r\n              <input id='word_input' autoComplete=\"off\" className=\"japanese\" type=\"text\" placeholder=\"Word\" lang=\"jp\" value={word} name=\"word\" onChange={this.handleChange} onKeyDown={this.handleKeyDown}/>\r\n              <input id='meaning_input' disabled={wordsMatched.length > 0} autoComplete=\"off\" type=\"text\" placeholder=\"Meaning\" lang=\"es\" value={wordsMatched.length > 0 ? wordsMatched[0].meaning : meaning} name=\"meaning\" onChange={this.handleChange} onKeyDown={this.handleKeyDown} />\r\n              <select name=\"language\" onChange={this.handleChange} value={wordsMatched.length > 0 ? wordsMatched[0].language : this.state.language} disabled={wordsMatched.length > 0}>\r\n                {\r\n                  languages.map(l => <option key={l.code} value={l.code}>{l.name}</option>)\r\n                }\r\n              </select>\r\n              <input id='image_url' autoComplete=\"off\" className=\"image_url\" type=\"text\" placeholder=\"https://image_url.com/image\" value={image_url} name=\"image_url\" onChange={this.handleChange} onKeyDown={this.handleKeyDown} />\r\n            </div>\r\n            <div className=\"match-area\">\r\n              {\r\n                wordsMatched.length > 1 && <span style={{color: 'red'}}><em>{wordsMatched.length} results with same word (POSSIBLE DUPLICATION)</em></span>\r\n              }\r\n            </div>\r\n            <div className=\"actions\">\r\n              <Button tagClass=\"btn_bc_blue\" icon=\"close\" text=\"CLOSE\" onClickEvent={this.closeAndResetState} />\r\n              {\r\n                ((_id && !wordsMatched.length > 0) || (!_id)) && <Button tagClass=\"btn_bc_green\" icon={_id ? 'save': 'backup'} text={_id ? 'SAVE': wordsMatched.length === 0 ? 'ADD' : 'SET ACTIVE'} onClickEvent={this.addEditWord} /> \r\n              }\r\n            </div>\r\n          </div>\r\n      </HyperModal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isModalOpen: state.modalsReducer.addEditModal,\r\n    word: state.wordsReducer.selectedWord\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setModalStatus,\r\n  setSelectedWord\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(addEditModal);\r\n","import React, { Component } from 'react';\r\nimport HyperModal from 'react-hyper-modal';\r\nimport { connect } from 'react-redux';\r\nimport { setModalStatus, setRepeatTimes } from '../../redux/actions';\r\nimport ModalBtn from '../button/button';\r\nimport { updateTimesToRepeat } from '../../services/config';\r\nimport { toast } from 'react-toastify';\r\n\r\nclass repeatTimes extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n  \r\n    this.state = {\r\n      id: null,\r\n      times: null\r\n    }\r\n  }\r\n\r\n  closeModal = () => {\r\n    this.props.setModalStatus('repeatTimesModal', false);\r\n  };\r\n\r\n  componentWillReceiveProps(newProps) {\r\n    const { timesToRepeat } = newProps;\r\n    this.setState({\r\n      id: timesToRepeat._id,\r\n      times: String(timesToRepeat.repeat_times)\r\n    })\r\n  }\r\n\r\n  onChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n }\r\n\r\n  updateTimes = () => {\r\n    let { times, id } = this.state;\r\n    times = parseInt(times);\r\n\r\n    if(!times) {\r\n      return toast.warn('Not a number');\r\n    }\r\n\r\n    updateTimesToRepeat(id, times)\r\n      .then(config => {\r\n        this.props.setRepeatTimes(config);\r\n        this.closeModal();\r\n        toast.success('Updated');\r\n      })\r\n      .catch(err => toast.error(err))\r\n  }\r\n\r\n  render() {\r\n    const { isModalOpen } = this.props;\r\n\r\n    return (\r\n      <HyperModal\r\n        isOpen={isModalOpen}\r\n        requestClose={this.closeModal}\r\n        classes={{contentClassName: 'app-modal'}}\r\n      >\r\n        <div className=\"config-modal\">\r\n          <h2>Enter how many times do you want to play each word</h2>\r\n          <input name=\"times\" type=\"text\" value={this.state.times || ''} onChange={this.onChange} />\r\n          <div className=\"actions\">\r\n            <ModalBtn tagClass=\"btn_bc_blue\" icon=\"close\" text=\"CLOSE\" onClickEvent={this.closeModal} />\r\n            <ModalBtn tagClass=\"btn_bc_green\" icon='save' text='SAVE' onClickEvent={this.updateTimes} />\r\n          </div>\r\n        </div>\r\n      </HyperModal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isModalOpen: state.modalsReducer.repeatTimesModal,\r\n    timesToRepeat: state.wordsReducer.repeat_times\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setModalStatus,\r\n  setRepeatTimes\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(repeatTimes);\r\n","import axios from 'axios';\r\n\r\nexport const getConfig = (language) => {\r\n  return new Promise((resolve, reject) => {\r\n    axios.get(process.env.REACT_APP_SERVER_IP + '/config/load/' + language)\r\n      .then(res => resolve(res.data))\r\n      .catch(err => reject(err));\r\n  })\r\n};\r\n\r\nexport const updateTimesToRepeat = (id, times) => {\r\n  return new Promise((resolve, reject) => {\r\n    axios.post(process.env.REACT_APP_SERVER_IP + '/config/update/' + id, { times })\r\n      .then(res => resolve(res.data))\r\n      .catch(err => reject(err));\r\n  })\r\n};","import React from 'react';\r\nimport MenuModal from '../modalMenu/menu';\r\nimport CardDetails from '../modalCardDetails/cardDetails';\r\nimport AddEditCard from '../modalAddEditCard/addEdit';\r\nimport RepeatTimesModal from '../modalRepeatTimes/repeatTimesModal';\r\n\r\nexport default function modals() {\r\n  return (\r\n    <>\r\n      <MenuModal />\r\n      <CardDetails />\r\n      <AddEditCard />\r\n      <RepeatTimesModal />\r\n    </>\r\n  )\r\n}","import React from 'react';\r\nimport './styles.css';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction preview(props) {\r\n  const currentWordId = props.playerReducer.playing_id;\r\n  const image_url = currentWordId ? props.words.find(w => w._id === currentWordId).image_url : null;\r\n\r\n  return (\r\n    image_url && !props.domLoader.isModalVisible ? \r\n    <div className=\"preview_image\">\r\n      <div className=\"img-container\">\r\n        <img src={image_url} alt=\"xd\"/>\r\n      </div>\r\n    </div>\r\n    : null\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    words: state.wordsReducer.words,\r\n    playerReducer: state.playerReducer,\r\n    domLoader: state.domLoader,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(preview);","import React, { Component } from 'react';\r\nimport Header from '../components/header/header';\r\nimport PlayingBar from '../components/playingBar/playingBar';\r\nimport WordList from '../components/wordList/wordList';\r\nimport AppModals from '../components/appModals/modals';\r\nimport ImagePreview from '../components/previewImage/preview';\r\nimport { updateActiveWordListFromAPI, DOMLoader, setInitialData } from '../util';\r\nimport { getConfig } from '../services/config';\r\n\r\nexport default class Home extends Component {\r\n\r\n  componentDidMount() {\r\n    getConfig()\r\n      .then(data => {\r\n        setInitialData(data)\r\n        return updateActiveWordListFromAPI()\r\n      })\r\n      .then(() => DOMLoader.hidde())\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Header />\r\n        <ImagePreview />\r\n        <WordList />\r\n        <AppModals />\r\n        <footer>\r\n          <PlayingBar />\r\n        </footer>\r\n      </>\r\n    )\r\n  }\r\n}\r\n","import './sharedStyles/index';\r\nimport { Store } from './redux/store';\r\nimport { Provider } from \"react-redux\";\r\nimport Dashboard from \"./containers/dashboard\";\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={Store}>\r\n      <Dashboard />\r\n      <ToastContainer\r\n        autoClose={3000}\r\n        position=\"bottom-right\"\r\n        pauseOnHover={false}\r\n        pauseOnFocusLoss={false}\r\n      />\r\n    </Provider>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}